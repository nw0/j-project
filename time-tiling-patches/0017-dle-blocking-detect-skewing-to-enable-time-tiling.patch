From 93b7955b900464f60f7bf181438764eb598e2101 Mon Sep 17 00:00:00 2001
From: Nicholas Sim <nicholassimws@gmail.com>
Date: Fri, 16 Feb 2018 14:46:39 +0000
Subject: [PATCH 17/25] dle: blocking: detect skewing to enable time-tiling

---
 devito/dle/backends/advanced.py | 11 ++++++++---
 tests/test_dle.py               |  9 +++++++--
 tests/test_dse.py               |  2 +-
 3 files changed, 16 insertions(+), 6 deletions(-)

diff --git a/devito/dle/backends/advanced.py b/devito/dle/backends/advanced.py
index 62dee022..b7c902fa 100644
--- a/devito/dle/backends/advanced.py
+++ b/devito/dle/backends/advanced.py
@@ -24,6 +24,7 @@ from devito.ir.iet import (Block, Expression, Iteration, List,
                            retrieve_iteration_tree, filter_iterations,
                            copy_arrays, SEQUENTIAL)
 from devito.logger import dle_warning
+from devito.parameters import configuration
 from devito.tools import as_tuple, grouper, roundm
 from devito.types import Array, Scalar
 
@@ -131,7 +132,12 @@ class DevitoRewriter(BasicRewriter):
         blocked = OrderedDict()
         for tree in retrieve_iteration_tree(fold):
             # Is the Iteration tree blockable ?
-            iterations = [i for i in tree if i.is_Parallel]
+            # FIXME: change mark_parallel ensure skewed loops are is_Parallel
+            if configuration['skew_factor']:
+                iterations = tree
+            else:
+                iterations = [i for i in tree if i.is_Parallel]
+
             if exclude_innermost:
                 iterations = [i for i in iterations if not i.is_Vectorizable]
             if len(iterations) <= 1:
@@ -168,8 +174,7 @@ class DevitoRewriter(BasicRewriter):
                 # FIXME: these bounds might be a little fishy
                 outer_start = start + i.skew[0] * i.skew[1]
                 outer_finish = finish + i.skew[0] * i.skew[1] - i.skew[0] * i.skew[1].symbolic_end
-                inter_block = Iteration([], dim, [outer_start, outer_finish, block_size],
-                                        properties=PARALLEL)
+                inter_block = Iteration([], dim, [outer_start, outer_finish, block_size])
                 inter_blocks.append(inter_block)  # the area being blocked
 
                 # Build Iteration within a block
diff --git a/tests/test_dle.py b/tests/test_dle.py
index 0eea3754..210d21c8 100644
--- a/tests/test_dle.py
+++ b/tests/test_dle.py
@@ -9,6 +9,7 @@ from sympy import solve
 
 from conftest import EVAL
 
+from devito import configuration
 from devito.dle import transform
 from devito.dle.backends import DevitoRewriter as Rewriter
 from devito import Grid, Function, TimeFunction, Eq, Operator
@@ -394,11 +395,15 @@ def test_cache_blocking_edge_cases_highorder(shape, blockshape):
     ((15, 15), (3, 4))
 ])
 def test_time_blocking(shape, blockshape):
+    prev = configuration['skew_factor'] if 'skew_factor' in configuration else 0
+    configuration['skew_factor'] = 2
     wo_blocking, _ = _new_operator3(shape, time_order=2, dle='noop')
     w_blocking, _ = _new_operator3(shape, time_order=2, dse='skewing',
-                                   dle=('blocking', {'blockshape': blockshape,
-                                                     'blockinner': True}))
+                                   dle=('blocking,openmp',
+                                        {'blockshape': blockshape,
+                                         'blockinner': True}))
     assert np.equal(wo_blocking.data, w_blocking.data).all()
+    configuration['skew_factor'] = prev
 
 
 @skipif_yask
diff --git a/tests/test_dse.py b/tests/test_dse.py
index 4a8b8cfb..2f43e900 100644
--- a/tests/test_dse.py
+++ b/tests/test_dse.py
@@ -146,7 +146,7 @@ def test_dle_tiling(tti_nodse):
 
 @skipif_yask
 def test_tti_rewrite_skewing(tti_nodse):
-    operator = tti_operator(dse='skewing', dle='noop')
+    operator = tti_operator(dse='skewing')
     rec, u, v, _ = operator.forward()
 
     assert np.allclose(tti_nodse[0].data, v.data, atol=10e-3)
-- 
2.17.1

